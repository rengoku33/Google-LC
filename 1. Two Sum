class Solution {
    public int[] twoSum(int[] nums, int target) {
        // brute force approach time: O(n^2)  ---  space: O(1)
        // Map-a Hashh approach time: O(n)    ---  space: O(n)
       
        // so the goal is the iterate and check if target-nums[i] is present in map
        // if present store value of key and current i in res
        // else store current key and value in MAPA HASH PUTA MADARA UCHIHA 

        // we follow this process in order to aviod finding same repetation using contains key

        int[] res= new int[2];
        HashMap<Integer, Integer> map= new HashMap<>();
        for(int i=0; i<nums.length; i++){
           if(map.containsKey(target-nums[i])){
               res[0]=map.get(target-nums[i]);
               res[1]=i;
           }
           else{
                map.put(nums[i],i);
           }
        }
        return res;
    }
}
